{"No":"ORR29",
"Subject":"객체 생성 중 this 참조가 유출되지 않게한다",
"Level":"Medium",
"Description":"this 참조가 유출되었다는 것은 this 참조를 외부에서 사용할 수 있다는 것을 의미한다. this참조는 여러 가지 방법으로 유출 될 수 있다.\n 클래스 생성자에서 호출한 비 private 메서드가 this를 반활할 경우, 클래스 생성자가 public static 변수에 this를 대입할 경우, 등등이 존재한다.\n 이와 같은 경우로 this참조가 유출되면 다른 스레드가 부분 초기화된 객체의 상태를 엿볼 수 있게 된다.",
"Vulncode":"1)\nfinal class Publisher {\n\tpublic static volatile Publisher published;\n\tint num;\n\tPublisher(int number) {\n\t\tpublished = this;\n\t\t// 초기화\n\t\tthis.num = number;\n\t}\n}\n\n2)\nfinal class Publisher {\n\tpublic static Publisher published;\n\tint num;\n\tPublisher(int number) {\n\t\tthis.num = number;\n\t\t// 초기화\n\t\tpublished = this;\n\t}\n}\n\n3)\npublic class DefaultExceptionReporter implements ExceptionReporter {\n\tpublic DefaultExceptionReporter(ExceptionReporter er) {\n\t\ter.setExceptionReporter(new DefaultExceptionReproter(er) {\n\t\t\tpublic void report(Throwalbe t) {\n\t\t\t\tfilter(t);\n\t\t\t}\n\t\t});\n\t}\n}",
"Secucode":"1)\nfinal class Publisher {\n\tstatic volatile Publisher published;\n\tint num;\n\tPublisher(int number) {\n\t\tthis.num = number;\n\t\t// 초기화\n\t\tpublished = this;\n\n\t}\n}\n\n2)\nfinal class Publisher {\n\tfinal int num;\n\tprivate Publisher(int number) {\n\t\tthis.num = number;\n\t}\n\n\tpublic static Publisher newInstance(int number) {\n\t\tPublisher published = new Publisher(number);\n\t\treturn published;\n\t}\n}\n\n3)\npublic class DefaultExceptionReporter implements ExceptionReporter {\n\tprivate final DefaultExceptionReporter dafaultER;\n\tprivate DefualtExceptionReporter(ExceptionReporter excr) {\n\t\tdefualtER = new DefaultExceptionReporter(excr) {\n\t\t\tpublic void report(Throwable t) {\n\t\t\t\tfilter(t);\n\t\t\t}\n\t\t};\n\t}\n\tpublic static DefaultExceptionReporter newInstance(ExceptionReporter excr) {\n\t\tDefaultExceptionReporter der = new DefaultExceptionReporter(excr);\n\t\texcr.setDefaultExceptionReporter(der.dafultER);\n\t\treturn der;\n\t}\n}"}